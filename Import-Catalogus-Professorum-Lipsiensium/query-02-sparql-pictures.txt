PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pcp: <http://pcp-on-web.de/ontology#>
PREFIX data: <http://data.pcp-on-web.de/v.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cpm: <http://catalogus-professorum.org/cpm/2/>
PREFIX cpl: <http://catalogus-professorum.org/lipsiensium/>


CONSTRUCT   {

# Lecturer
?lecturer rdf:type pcp:Lecturer.

?lecturer pcp:relatedDocument ?uri_pcp_picture.
?uri_pcp_picture rdf:type pcp:Picture.
?uri_pcp_picture pcp:pictureURL ?picture_url.
?uri_pcp_picture pcp:pictureArchive ?picture_archive.
?uri_pcp_picture pcp:pictureKey ?picture_key.
?uri_pcp_picture pcp:derivedFrom ?picture.

}
WHERE {
  SELECT DISTINCT * WHERE {
  GRAPH cpl: {  

  # Get all professors from CPL catalog and assign a new ressource if new
  ?professor a cpm:Professor.
  OPTIONAL { GRAPH data: { ?uri_exists_1 pcp:derivedFrom ?professor . }} 
  BIND (IF (BOUND(?uri_exists_1),?uri_exists_1,IRI(CONCAT(str(data:), strUUID()))) AS ?lecturer)

    #retrieve picture resources
    OPTIONAL {
      ?professor cpm:hasPicture ?picture.

      OPTIONAL { GRAPH data: { ?uri_exists_2 pcp:derivedFrom ?picture . }} 
      BIND (IF (BOUND(?uri_exists_2),?uri_exists_2,IRI(CONCAT(str(data:), strUUID()))) AS ?uri_pcp_picture)

      OPTIONAL {?picture cpm:picture ?picture_url}.
      OPTIONAL {?picture cpm:pictureArchive ?picture_archive}.
      OPTIONAL {?picture cpm:pictureKey ?picture_key}.

    }
  }
}
}
